import facade.VideoConversionFacade;

import java.io.File;

/**
 * Фасад — это структурный паттерн,
 * который предоставляет простой (но урезанный) интерфейс к сложной системе объектов, библиотеке или фреймворку.
 *
 * Кроме того, что Фасад позволяет снизить общую сложность программы,
 * он также помогает вынести код, зависимый от внешней системы в единственное место.
 *
 * Применимость: Паттерн часто встречается в клиентских приложениях, написанных на Java,
 * которые используют классы-фасады для упрощения работы со сложными библиотеки или API.
 *
 * Признаки применения паттерна: Фасад угадывается в классе, который имеет простой интерфейс,
 * но делегирует основную часть работы другим классам.
 * Чаще всего, фасады сами следят за жизненным циклом объектов сложной системы.
 *
 * Пример: Простой интерфейс к сложной библиотеке видеоконвертации
 * В этом примере Фасад упрощает работу клиента со сложной библиотекой видеоконвертации.
 * Фасад предоставляет пользователю лишь один простой метод,
 * скрывая за собой целую систему с видеокодеками, аудиомикшерами и другими не менее сложными объектами.
 */
public class Main {
    public static void main(String[] args) {
        VideoConversionFacade converter = new VideoConversionFacade();
        File mp4Video = converter.convertVideo("youtubevideo.ogg", "mp4");
        // ...
    }
}
